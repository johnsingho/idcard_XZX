<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8">
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<title>新中新二代证阅读器控件测试程序JavaScript</title>

	<style>
		.divPack {
			bottom: 0px;
			right: 0px;
			position: fixed;
			background-color: #fafafa;
		}

		a:hover {
			color: red;
		}
	</style>

	<script type="text/javascript">
		function FindReader_onclick() {
			var str;
			//str = SynCardOcx1.FindReader();
			str = SynCardOcx1.FindUSBReader();
			if (str > 0) {
				if (str > 1000) {
					str = document.all['S1'].value + "读卡器连接在USB " + str + "\r\n";
				}
				else {
					str = document.all['S1'].value + "读卡器连接在COM " + str + "\r\n";
				}
			}
			else {
				str = document.all['S1'].value + "没有找到读卡器\r\n";
			}
			document.all['S1'].value = str;
		}

		function ReadSAMID_onclick() {
			var str = SynCardOcx1.GetSAMID();
			document.all['S1'].value = document.all['S1'].value + "读卡器SAMID为:" + str + "\r\n";
		}
		function Clear_onclick() {
			document.all['S1'].value = "";
		}
		function ReadCard_onclick() {
			var nRet;

			nRet = SynCardOcx1.ReadCardMsg();
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "读卡成功\r\n";
				document.all['S1'].value = document.all['S1'].value + "姓名:" + SynCardOcx1.NameA + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "性别:" + SynCardOcx1.Sex + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "民族:" + SynCardOcx1.Nation + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "出生日期:" + SynCardOcx1.Born + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "地址:" + SynCardOcx1.Address + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "身份证号:" + SynCardOcx1.CardNo + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "有效期开始:" + SynCardOcx1.UserLifeB + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "有效期结束:" + SynCardOcx1.UserLifeE + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "发证机关:" + SynCardOcx1.Police + "\r\n";
				document.all['S1'].value = document.all['S1'].value + "照片文件名:" + SynCardOcx1.PhotoName + "\r\n";
			} else {
				document.all['S1'].value = document.all['S1'].value + "SynCardOcx1.ReadCardMsg()失败，nRet=" + nRet + "\r\n";
			}
		}
		function ReadCardAuto_onclick() {
			SynCardOcx1.SetloopTime(1000);
			SynCardOcx1.SetReadType(1);
		}

		function PhotoPath_onclick() {
			var str = "";
			SynCardOcx1.SetPhotoPath(0, str);
			document.all['S1'].value = document.all['S1'].value + "照片保存路径设置为C盘根目录\r\n";
		}
		function PhotoPath2_onclick() {
			var str = "";
			SynCardOcx1.SetPhotoPath(1, str);
			document.all['S1'].value = document.all['S1'].value + "照片保存路径设置为当前目录\r\n";
		}
		function PhotoPath3_onclick() {
			var str = "D:\\Photo";
			var nRet;
			nRet = SynCardOcx1.SetPhotoPath(2, str);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存路径设置为" + str + "\r\n";
			}
			else {
				document.all['S1'].value = document.all['S1'].value + "照片保存路径设置失败\r\n";
			}
		}
		function PhotoType_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoType(0);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存格式设置为Bmp\r\n";
			}
		}
		function PhotoType2_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoType(1);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存格式设置为Jpeg\r\n";
			}
		}
		function PhotoType3_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoType(2);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存格式设置为Base64\r\n";
			}
		}
		function PhotoName_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoName(0);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存文件名设置为tmp\r\n";
			}
		}
		function PhotoName2_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoName(1);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存文件名设置为 姓名\r\n";
			}
		}
		function PhotoName3_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoName(2);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存文件名设置为 身份证号\r\n";
			}
		}
		function PhotoName4_onclick() {
			var nRet;
			nRet = SynCardOcx1.SetPhotoName(3);
			if (nRet == 0) {
				document.all['S1'].value = document.all['S1'].value + "照片保存文件名设置为 姓名_身份证号\r\n";
			}
		}
		function PhotoName5_onclick() {
			var str = SynCardOcx1.Base64Photo;
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}
		function M1Reset_onclick() {
			var str = SynCardOcx1.M1Reset();
			alert("str=" + str + ",len=" + str.length);
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}
		function M1Halt_onclick() {
			var str = SynCardOcx1.M1Halt;
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}
		function M1AuthenKey_onclick() {
			//BSTR M1AuthenKey(LONG KeyType, LONG BlockNo, LPCTSTR uKey, LPCTSTR uKey2, LPCTSTR uKey3, LPCTSTR uKey4, LPCTSTR uKey5, LPCTSTR uKey6)
			//LONG KeyType  0=A密钥  1=B密钥
			//LONG BlockNo  扇区号
			//uKey~uKey6 密钥
			//返回0成功
			var str = SynCardOcx1.M1AuthenKey(0, 0, "255", "255", "255", "255", "255", "255");
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}
		function M1Read_onclick() {
			//BSTR M1ReadBlock(LONG BlockNo)
			//LONG BlockNo 块号
			//返回数据位16进制 16个字节 空格分隔
			var str = SynCardOcx1.M1ReadBlock(1);
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}
		function M1Write_onclick() {
			//BSTR M1WriteBlock(LONG BlockNo, LPCTSTR uData, LPCTSTR uData2, LPCTSTR uData3, LPCTSTR uData4, LPCTSTR uData5, LPCTSTR uData6, LPCTSTR uData7, LPCTSTR uData8, LPCTSTR uData9, LPCTSTR uData10, LPCTSTR uData11, LPCTSTR uData12, LPCTSTR uData13, LPCTSTR uData14, LPCTSTR uData15, LPCTSTR uData16)
			//LONG BlockNo 块号
			//uData 数据 数据位0，应写为00， 1写为01,12写为12
			var str = SynCardOcx1.M1WriteBlock(1, "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0");
			document.all['S1'].value = document.all['S1'].value + str + "  \r\n";
		}

		function load() {

			//	PhotoPath_onclick();
			//	PhotoName4_onclick();
			//	FindReader_onclick();

			// 		ReadCard_onclick();

			//	ReadCardAuto_onclick();
			if (!SynCardOcx1 || !SynCardOcx1.FindReader) {
				alert("身份证读卡器没有连接，或SynCardOcx.cab没有正常工作！\r\n只能使用IE浏览器！");
				return;
			}
			SynCardOcx1.SetPhotoPath(1, "d:\\");
			SynCardOcx1.SetPhotoType(4);
		}
	</script>

</head>

<body leftmargin="0" topmargin="0" onLoad="load();">
	<p>
		<object classid="clsid:46E4B248-8A41-45C5-B896-738ED44C1587" id="SynCardOcx1" codeBase="SynCardOcx.CAB#version=1,0,0,1" width="0"
		 height="0">
		</object>
	</p>
	<form method="POST" action="--WEBBOT-SELF--" name="form1">
		<p>
			<textarea rows="17" name="S1" cols="82"></textarea>
		</p>
		<p>
			<input type="button" value="自动寻找读卡器" name="FindReadBtn" onclick="FindReader_onclick()">
			<input type="button" value="获得SAMID" name="GetSAMIDBtn" onclick="ReadSAMID_onclick()">
			<input type="button" value="手动读卡" name="ReadCardBtn" onclick="ReadCard_onclick()">
			<input type="button" value="自动读卡" name="ReadCardAutoBtn" onclick="ReadCardAuto_onclick()">
			<input type="button" value="清除所有信息" name="ClearBtn" onclick="Clear_onclick()">
		</p>
		<p>
			照片保存路径:&nbsp;&nbsp;
			<input type="button" value="C盘根目录" name="PathBtn" onclick="PhotoPath_onclick()">
			<input type="button" value="当前目录" name="Path2Btn" onclick="PhotoPath2_onclick()">
			<input type="button" value="设置为D:\PHOTO" name="Path3Btn" onclick="PhotoPath3_onclick()">
		</p>
		<p>
			照片保存格式:&nbsp;&nbsp;
			<input type="button" value="bmp" name="PhotoTypeBtn" onclick="PhotoType_onclick()">
			<input type="button" value="Jpeg" name="PhotoType2Btn" onclick="PhotoType2_onclick()">
			<input type="button" value="Base64" name="PhotoType3Btn" onclick="PhotoType3_onclick()">
		</p>
		<p>
			照片文件名格式:
			<input type="button" value="tmp" name="PhotoNameBtn" onclick="PhotoName_onclick()">
			<input type="button" value="姓名" name="PhotoName2Btn" onclick="PhotoName2_onclick()">
			<input type="button" value="身份证号" name="PhotoName3Btn" onclick="PhotoName3_onclick()">
			<input type="button" value="姓名_身份证号" name="PhotoName4Btn" onclick="PhotoName4_onclick()">
			<input type="button" value="Base64照片" name="PhotoName4Btn0" onclick="PhotoName5_onclick()">
		</p>
		<p>
			M1卡操作：
			<input type="button" value="M1卡复位(复位成功返回卡号)" name="M1ResetBtn" onclick="M1Reset_onclick()">
			<input type="button" value="M1卡Halt" name="M1HaltBtn" onclick="M1Halt_onclick()">
			<input type="button" value="M1卡密钥验证" name="M1AuthenKeyBtn" onclick="M1AuthenKey_onclick()">
			<input type="button" value="M1卡读块" name="M1ReadBtn" onclick="M1Read_onclick()">
			<input type="button" value="M1卡写块" name="M1WriteBtn" onclick="M1Write_onclick()">
		</p>
	</form>

	<div>
		<p>
			<input type="button" value="读身份证测试" name="btnReadIdCard" onclick="search_sfz()">
		</p>
		<div class="divPack">
			<a href="http://dmnnt022:8111/xzx/XZX_OCXsetup.zip"> 【新中新】OCX插件离线安装包</a>
			<br>
			<a href="http://dmnnt022:8111/xzx/HuaTengOCX.zip"> 【华腾永泰】OCX插件离线安装包</a>
			<br>
			<a href="http://dmnnt022:8111/xzx/XinKaiPuOcx.zip"> 【新开普】OCX插件离线安装包</a>
			<br>
			<a href="http://dmnnt022:8111/xzx/TeamViewer.zip"> TeamView 1.0（密码：123）</a>
			<br>
		</div>
		<script type="text/javascript">
			/**
			 * 读身份证
			 */
			function search_sfz() {

				/**首先调用FindReader()找到读卡器驱动，没有这一段，nRet为1**/

				var str;
				str = SynCardOcx1.FindReader();
				if (str <= 0) {
					alert("没有找到读卡器");
					return false;
				}

				var nRet;
				//SynCardOcx1.SetReadType(0);  
				SynCardOcx1.SetPhotoType(2);
				SynCardOcx1.SetUserLifeBType(2);//返回有效期开始日期的格式0=YYYYMMDD,1=YYYY年MM月DD日,2=YYYY.MM.						DD,3=YYYY-MM-DD,4=YYYY/MM/DD
				SynCardOcx1.SetUserLifeEType(2, 0);//返回有效期结束日期的格式0=YYYYMMDD,1=YYYY年MM月DD日,2=YYYY.M						M.DD,3=YYYY-MM-DD,4=YYYY/MM/DD
				SynCardOcx1.SetBornType(3);//返回出生日期的格式0=YYYYMMDD,1=YYYY年MM月DD日,2=YYYY.MM.DD,　　3=YY						YY-MM-DD,4=YYYY/MM/DD
				SynCardOcx1.SetNationType(1);//返回民族的格式0=卡内存储的数据 ， 1=解释之后的数据	，2=解释						之后+“族”
				SynCardOcx1.SetSexType(1);//返回性别的格式[in] 整形。0=卡内存储的数据， 1=解释之后的数据
				nRet = SynCardOcx1.ReadCardMsg();

				if (nRet == 0) {
					var yxq = SynCardOcx1.UserLifeB + "-" + SynCardOcx1.UserLifeE;	//有效期
					var newyxq = yxq;
					var mz = SynCardOcx1.Nation;		//民族							

					var name = SynCardOcx1.NameA;	//姓名							

					var xb = SynCardOcx1.Sex;		//性别							

					var csrq = SynCardOcx1.Born;	//出生年日							

					var jtzz = SynCardOcx1.Address;	//户口住址							

					var sfz = SynCardOcx1.CardNo;	//身份证号码								

					var fzdw = SynCardOcx1.Police;       //发证单位

					alert("idcard: " + sfz);
					//TODO
				}
				else {
					alert("SynCardOcx1.ReadCardMsg() = " + nRet);
				}
			}

			/**
			 * 通过身份证号码获取年龄
			 * @param sfz	身份证号码
			 * @param obj	年龄文本框jQuery对象 
			 */
			function getage(sfz, obj) {
				var str = sfz;		// 身份证编码
				var len = str.length;	// 身份证编码长度
				if (len < 15) {
					alert("不是有效身份证编码");
				} else {
					if ((len != 15) && (len != 18)) {	// 判断编码位数等于15或18
						alert("不是有效身份证编码");
					} else {
						if (len == 15) {				// 15位身份证
							var s = str.substr(len - 1, 1);
							var date1 = new Date();	// 取得当前日期
							var year1 = date1.getFullYear();	// 取得当前年份
							var month1 = date1.getMonth();	// 取得当前月份
							if (month1 > parseInt(str.substr(8, 2))) {	// 判断当前月分与编码中的月份大小
								var age = year1 - ("19" + str.substr(6, 2));
								obj.attr("value", age);
							}
							else {
								var age = year1 - ("19" + str.substr(6, 2)) - 1;
								obj.attr("value", age);
							}
						}
						if (len == 18) {				// 18位身份证
							var date1 = new Date();	// 取得当前日期
							var year1 = date1.getFullYear();	// 取得当前年份
							var month1 = date1.getMonth();	// 取得当前月份
							if (month1 > parseInt(str.substr(10, 2))) {	// 判断当前月分与编码中的月份大小
								var age = year1 - str.substr(6, 4);
								obj.attr("value", age);
							}
							else {
								var age = year1 - str.substr(6, 4) - 1;
								obj.attr("value", age);
							}
						}
					}
				}
			}   
		</script>

	</div>
</body>

</html>